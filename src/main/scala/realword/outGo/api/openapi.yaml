openapi: 3.0.0
info:
  contact:
    email: contact@example.com
    name: Contact Name
    url: http://localhost:8080/api
  title: realworld api test
  version: 0.0.1
servers:
- url: http://localhost:8080/api
tags:
- description: Metadata related requests
  name: Metadata
paths:
  /users:
    post:
      operationId: Registration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistReq'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRes'
          description: success
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: error
      summary: regist
  /users/login:
    post:
      operationId: Authentication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthReq'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRes'
          description: success
        422:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
          description: error
      summary: auth account
  /user:
    get:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRes'
          description: get currentUser
      summary: currentuser
components:
  schemas:
    AuthReq:
      example:
        user:
          email: example@ex.com
          password: user
      properties:
        user:
          $ref: '#/components/schemas/AuthData'
      type: object
    AuthData:
      example:
        email: example@ex.com
        password: user
      properties:
        email:
          type: string
        password:
          type: string
      type: object
    RegistReq:
      example:
        user:
          username: exampleName
          email: example@ex.com
          password: user
      properties:
        user:
          $ref: '#/components/schemas/RegistData'
      type: object
    RegistData:
      example:
        username: exampleName
        email: example@ex.com
        password: user
      properties:
        username:
          type: string
        email:
          type: string
        password:
          type: string
      type: object
    UserRes:
      example:
        user:
          image: image
          bio: bio
          email: email
          token: token
          username: username
      properties:
        user:
          $ref: '#/components/schemas/UserData'
      type: object
    UserData:
      example:
        image: image
        bio: bio
        email: email
        token: token
        username: username
      properties:
        email:
          type: string
        token:
          type: string
        username:
          type: string
        bio:
          type: string
        image:
          type: string
      type: object
    Errors:
      properties:
        errors:
          $ref: '#/components/schemas/Errors_errors'
      type: object
    Errors_errors:
      properties:
        body:
          items:
            type: string
          type: array
