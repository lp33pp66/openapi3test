/**
 * Mail Platform API
 * Mail Platform API # Beyond OpenAPI [Reference](reference.html) for API which cannot modeled after OpenAPI. 
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.client.api

import org.openapitools.client.model.Error
import org.openapitools.client.model.InlineObject10
import org.openapitools.client.model.InlineObject11
import org.openapitools.client.model.InlineObject12
import org.openapitools.client.model.SearchAggResult
import org.openapitools.client.model.SearchResult
import org.openapitools.client.core._
import org.openapitools.client.core.CollectionFormats._
import org.openapitools.client.core.ApiKeyLocations._

object SearchApi {

  def apply(baseUrl: String = "http://localhost") = new SearchApi(baseUrl)
}

class SearchApi(baseUrl: String) {
  
  /**
   * Return aggregation results
   * 
   * Expected answers:
   *   code 200 : SearchAggResult (Success)
   *   code 400 : Error (error: 8, 17000, 17001)
   * 
   * @param inlineObject12 
   * @param query Query string with Lucene query syntax.
   * @param index Specify index to search, if no such query parameter means all indices, use multiple query parameter to specify more than one index `?index=<index-1>&index=<index-2>`.
   * @param userId Restrict search target to specified user.
   */
  def searchAggregationGet(inlineObject12: InlineObject12, query: Option[String] = None, index: Seq[String], userId: Option[String] = None): ApiRequest[SearchAggResult] =
    ApiRequest[SearchAggResult](ApiMethods.GET, baseUrl, "/search/aggregation", "application/json")
      .withBody(inlineObject12)
      .withQueryParam("query", query)
      .withQueryParam("index", ArrayValues(index, CSV))
      .withQueryParam("userId", userId)
      .withSuccessResponse[SearchAggResult](200)
      .withErrorResponse[Error](400)
      

  /**
   * Return first page of search results sort by date in descending order.
   * 
   * Expected answers:
   *   code 200 : SearchResult (Success)
   *   code 400 : Error (error: 8, 17000, 17001, 17003)
   * 
   * @param inlineObject10 
   */
  def searchPost(inlineObject10: Option[InlineObject10] = None): ApiRequest[SearchResult] =
    ApiRequest[SearchResult](ApiMethods.POST, baseUrl, "/search", "application/json")
      .withBody(inlineObject10)
      .withSuccessResponse[SearchResult](200)
      .withErrorResponse[Error](400)
      

  /**
   * Return next page of search results with specified search ID.
   * 
   * Expected answers:
   *   code 200 : SearchResult (Success)
   *   code 400 : Error (error: 8, 17000)
   * 
   * @param inlineObject11 
   */
  def searchScrollPost(inlineObject11: Option[InlineObject11] = None): ApiRequest[SearchResult] =
    ApiRequest[SearchResult](ApiMethods.POST, baseUrl, "/search/scroll", "application/json")
      .withBody(inlineObject11)
      .withSuccessResponse[SearchResult](200)
      .withErrorResponse[Error](400)
      



}

