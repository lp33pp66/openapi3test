/**
 * Mail Platform API
 * Mail Platform API # Beyond OpenAPI [Reference](reference.html) for API which cannot modeled after OpenAPI. 
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.client.api

import org.openapitools.client.model.Error
import org.openapitools.client.model.FunctionControl
import org.openapitools.client.model.Success
import org.openapitools.client.core._
import org.openapitools.client.core.CollectionFormats._
import org.openapitools.client.core.ApiKeyLocations._

object FunctionControlApi {

  def apply(baseUrl: String = "http://localhost") = new FunctionControlApi(baseUrl)
}

class FunctionControlApi(baseUrl: String) {
  
  /**
   * Get system function control scope settings
   * 
   * Expected answers:
   *   code 200 : FunctionControl (Success)
   *   code 400 : Error (error: 8, 9)
   */
  def functionControlGet(): ApiRequest[FunctionControl] =
    ApiRequest[FunctionControl](ApiMethods.GET, baseUrl, "/function-control", "application/json")
      .withSuccessResponse[FunctionControl](200)
      .withErrorResponse[Error](400)
      

  /**
   * Set system function control scope settings 
   * 
   * Expected answers:
   *   code 200 : Success (Success)
   *   code 400 : Error (error: 8, 9, 5000, 19003)
   * 
   * @param functionControl 
   */
  def functionControlPost(functionControl: Option[FunctionControl] = None): ApiRequest[Success] =
    ApiRequest[Success](ApiMethods.POST, baseUrl, "/function-control", "application/json")
      .withBody(functionControl)
      .withSuccessResponse[Success](200)
      .withErrorResponse[Error](400)
      



}

