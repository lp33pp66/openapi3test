/**
 * Mail Platform API
 * Mail Platform API # Beyond OpenAPI [Reference](reference.html) for API which cannot modeled after OpenAPI. 
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.client.api

import org.openapitools.client.model.AuditReport
import org.openapitools.client.model.Error
import org.openapitools.client.model.Success
import org.openapitools.client.core._
import org.openapitools.client.core.CollectionFormats._
import org.openapitools.client.core.ApiKeyLocations._

object AuditApi {

  def apply(baseUrl: String = "http://localhost") = new AuditApi(baseUrl)
}

class AuditApi(baseUrl: String) {
  
  /**
   * Expected answers:
   *   code 200 : Seq[Any] (Success)
   *   code 400 : Error (error: 8)
   */
  def auditGet(): ApiRequest[Seq[Any]] =
    ApiRequest[Seq[Any]](ApiMethods.GET, baseUrl, "/audit", "application/json")
      .withSuccessResponse[Seq[Any]](200)
      .withErrorResponse[Error](400)
      

  /**
   * Expected answers:
   *   code 200 : Success (Success)
   *   code 400 : Error (error: 8, 3000, 3001, 7000, 7001)
   * 
   * @param auditReport 
   */
  def auditPost(auditReport: AuditReport): ApiRequest[Success] =
    ApiRequest[Success](ApiMethods.POST, baseUrl, "/audit", "application/json")
      .withBody(auditReport)
      .withSuccessResponse[Success](200)
      .withErrorResponse[Error](400)
      



}

