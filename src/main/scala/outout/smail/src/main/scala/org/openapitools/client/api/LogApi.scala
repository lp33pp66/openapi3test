/**
 * Mail Platform API
 * Mail Platform API # Beyond OpenAPI [Reference](reference.html) for API which cannot modeled after OpenAPI. 
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.client.api

import org.openapitools.client.model.InlineResponse2006
import org.openapitools.client.model.Success
import org.openapitools.client.core._
import org.openapitools.client.core.CollectionFormats._
import org.openapitools.client.core.ApiKeyLocations._

object LogApi {

  def apply(baseUrl: String = "http://localhost") = new LogApi(baseUrl)
}

class LogApi(baseUrl: String) {
  
  /**
   * Return user access log for specified subject
   * 
   * Expected answers:
   *   code 200 : Seq[Any] (Success)
   * 
   * @param accountId Id of a account
   * @param beginTime Begin timestamp, default is 0.
   * @param endTime End timestamp, default is current timestamp.
   * @param email email, allow multiple occurrences, e.g. foo@example.com.
   * @param verb Action, e.g. login, allow multiple occurrences, view, list, create.
   * @param obj Target service, allow multiple occurrences, e.g. domain, account/role, search, smtp/network list.
   * @param objReverse Peform obj exlusive filtering, default is false
   */
  def logAccessAccountIdGet(accountId: String, beginTime: Option[Double] = None, endTime: Option[Double] = None, email: Option[String] = None, verb: Option[String] = None, obj: Option[String] = None, objReverse: Option[Boolean] = None): ApiRequest[Seq[Any]] =
    ApiRequest[Seq[Any]](ApiMethods.GET, baseUrl, "/log/access/{account_id}", "application/json")
      .withQueryParam("begin-time", beginTime)
      .withQueryParam("end-time", endTime)
      .withQueryParam("email", email)
      .withQueryParam("verb", verb)
      .withQueryParam("obj", obj)
      .withQueryParam("obj-reverse", objReverse)
      .withPathParam("account_id", accountId)
      .withSuccessResponse[Seq[Any]](200)
      

  /**
   * Return user access log within specified time range
   * 
   * Expected answers:
   *   code 200 : Seq[Any] (Success)
   * 
   * @param beginTime Begin timestamp, default is 0.
   * @param endTime End timestamp, default is current timestamp.
   * @param subject Account id, allow multiple occurrences, e.g. 4194308.
   * @param email email, allow multiple occurrences, e.g. foo@example.com.
   * @param verb Action, e.g. login, allow multiple occurrences, view, list, create.
   * @param obj Target service, allow multiple occurrences, e.g. domain, account/role, search, smtp/network list.
   * @param objReverse Peform obj exlusive filtering, default is false
   */
  def logAccessGet(beginTime: Option[Double] = None, endTime: Option[Double] = None, subject: Option[String] = None, email: Option[String] = None, verb: Option[String] = None, obj: Option[String] = None, objReverse: Option[Boolean] = None): ApiRequest[Seq[Any]] =
    ApiRequest[Seq[Any]](ApiMethods.GET, baseUrl, "/log/access", "application/json")
      .withQueryParam("begin-time", beginTime)
      .withQueryParam("end-time", endTime)
      .withQueryParam("subject", subject)
      .withQueryParam("email", email)
      .withQueryParam("verb", verb)
      .withQueryParam("obj", obj)
      .withQueryParam("obj-reverse", objReverse)
      .withSuccessResponse[Seq[Any]](200)
      

  /**
   * Return archive event log within specified time range
   * 
   * Expected answers:
   *   code 200 : Seq[Any] (Success)
   * 
   * @param beginTime Begin timestamp, default is 0.
   * @param endTime End timestamp, default is current timestamp.
   * @param domain Domain id, allow multiple occurrences, e.g. 379461882848739328.
   * @param resource Resource name
   * @param mailType Archive mail types, e.g. normal, spam, threat, virus, other, imported, allow multiple occurrences
   * @param success Is archive result successful, will show both if not assigned
   * @param showFails Show archive fail details, default is false
   */
  def logArchiveGet(beginTime: Option[Double] = None, endTime: Option[Double] = None, domain: Option[String] = None, resource: Option[String] = None, mailType: Option[String] = None, success: Option[Boolean] = None, showFails: Option[Boolean] = None): ApiRequest[Seq[Any]] =
    ApiRequest[Seq[Any]](ApiMethods.GET, baseUrl, "/log/archive", "application/json")
      .withQueryParam("begin-time", beginTime)
      .withQueryParam("end-time", endTime)
      .withQueryParam("domain", domain)
      .withQueryParam("resource", resource)
      .withQueryParam("mail-type", mailType)
      .withQueryParam("success", success)
      .withQueryParam("show-fails", showFails)
      .withSuccessResponse[Seq[Any]](200)
      

  /**
   * Return list of currently created logger
   * 
   * Expected answers:
   *   code 200 : Seq[InlineResponse2006] (Success)
   */
  def logLoggingGet(): ApiRequest[Seq[InlineResponse2006]] =
    ApiRequest[Seq[InlineResponse2006]](ApiMethods.GET, baseUrl, "/log/logging", "application/json")
      .withSuccessResponse[Seq[InlineResponse2006]](200)
      

  /**
   * set log level for specified logger
   * 
   * Expected answers:
   *   code 200 : Success (Success)
   * 
   * @param level new log level
   * @param loggerName logger name
   */
  def logLoggingLoggerNamePost(level: String, loggerName: String): ApiRequest[Success] =
    ApiRequest[Success](ApiMethods.POST, baseUrl, "/log/logging/{logger_name}", "application/json")
      .withQueryParam("level", level)
      .withPathParam("logger_name", loggerName)
      .withSuccessResponse[Success](200)
      

  /**
   * Return security event log within specified time range
   * 
   * Expected answers:
   *   code 200 : Seq[Any] (Success)
   * 
   * @param beginTime Begin timestamp, default is 0.
   * @param endTime End timestamp, default is current timestamp.
   * @param user Account id of target user, allow multiple occurrences, e.g. 4194308.
   * @param event Security event type, e.g. loginSuccess, loginFailed, logout, changePassword
   * @param subject Account id of subject user, allow multiple occurrences, e.g. 4194308.
   */
  def logSecurityGet(beginTime: Option[Double] = None, endTime: Option[Double] = None, user: Option[String] = None, event: Option[String] = None, subject: Option[String] = None): ApiRequest[Seq[Any]] =
    ApiRequest[Seq[Any]](ApiMethods.GET, baseUrl, "/log/security", "application/json")
      .withQueryParam("begin-time", beginTime)
      .withQueryParam("end-time", endTime)
      .withQueryParam("user", user)
      .withQueryParam("event", event)
      .withQueryParam("subject", subject)
      .withSuccessResponse[Seq[Any]](200)
      



}

